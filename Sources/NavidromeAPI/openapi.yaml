openapi: 3.1.0
info:
  title: Navidrome API
  version: 0.1.0
tags:
  - name: Authentication
  - name: Lists
paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationResult'
  /api/album:
    get:
      tags:
        - Lists
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageEnd'
        - $ref: '#/components/parameters/Order'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/ArtistId'
        - $ref: '#/components/parameters/Starred'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
  /api/song:
    get:
      tags:
        - Lists
      parameters:
        - $ref: '#/components/parameters/PageOffset'
        - $ref: '#/components/parameters/PageEnd'
        - $ref: '#/components/parameters/Order'
        - $ref: '#/components/parameters/Sort'
        - $ref: '#/components/parameters/AlbumId'
        - $ref: '#/components/parameters/Starred'
        - $ref: '#/components/parameters/Title'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/MediaFile'
components:
  parameters:
    PageOffset:
      name: _start
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 0
    PageEnd:
      name: _end
      in: query
      required: false
      schema:
        type: integer
        format: int32
        minimum: 0
        default: 10
    Order:
      name: _order
      in: query
      required: false
      schema:
        type: string
        enum:
          - ASC
          - DESC
        default: ASC
    Sort:
      name: _sort
      in: query
      required: false
      schema:
        type: string
    AlbumId:
      name: album_id
      in: query
      required: false
      schema:
        type: string
    ArtistId:
      name: artist_id
      in: query
      required: false
      schema:
        type: string
    Starred:
      name: starred
      in: query
      required: false
      schema:
        type: boolean
    Title:
      name: title
      in: query
      required: false
      schema:
        type: string
  schemas:
    AuthenticationResult:
      type: object
      required:
        - id
        - name
        - username
        - isAdmin
        - token
      properties:
        id:
          type: string
        name:
          type: string
        username:
          type: string
        isAdmin:
          type: boolean
        avatar:
          type: string
        subsonicSalt:
          type: string
        subsonicToken:
          type: string
        token:
          type: string
    Album:
      type: object
      required:
        - id
        - libraryId
        - name
        - embedArtPath
        - artistId
        - artist
        - albumArtistId
        - albumArtist
        - allArtistIds
        - maxYear
        - minYear
        - maxOriginalYear
        - minOriginalYear
        - releases
        - compilation
        - songCount
        - duration
        - size
        - genre
        - orderAlbumName
        - orderAlbumArtistName
        - createdAt
        - updatedAt
      properties:
        playCount:
          type: integer
        playDate:
          type: string
          format: date-time
        rating:
          type: integer
        starred:
          type: boolean
        starredAt:
          type: string
          format: date-time
        id:
          type: string
        libraryId:
          type: integer
        name:
          type: string
        embedArtPath:
          type: string
        artistId:
          type: string
        artist:
          type: string
        albumArtistId:
          type: string
        albumArtist:
          type: string
        allArtistIds:
          type: string
        maxYear:
          type: integer
        minYear:
          type: integer
        date:
          type: string
        maxOriginalYear:
          type: integer
        minOriginalYear:
          type: integer
        originalDate:
          type: string
        releaseDate:
          type: string
        releases:
          type: integer
        compilation:
          type: boolean
        songCount:
          type: integer
        duration:
          type: number
          format: float32
        size:
          type: integer
        genre:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        sortAlbumName:
          type: string
        sortAlbumArtistName:
          type: string
        orderAlbumName:
          type: string
        orderAlbumArtistName:
          type: string
        imageFiles:
          type: string
        paths:
          type: string
        description:
          type: string
        smallImageUrl:
          type: string
        mediumImageUrl:
          type: string
        largeImageUrl:
          type: string
        externalUrl:
          type: string
        externalInfoUpdatedAt:
          type: string
          format: date-time
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    MediaFile:
      type: object
      required:
        - id
        - libraryId
        - path
        - title
        - album
        - artistId
        - artist
        - albumArtistId
        - albumArtist
        - albumId
        - hasCoverArt
        - trackNumber
        - discNumber
        - year
        - originalYear
        - releaseYear
        - size
        - suffix
        - duration
        - bitRate
        - sampleRate
        - genre
        - orderAlbumName
        - orderArtistName
        - orderAlbumArtistName
        - compilation
        - lyrics
        - rgAlbumGain
        - rgAlbumPeak
        - rgTrackGain
        - rgTrackPeak
        - createdAt
        - updatedAt
      properties:
        playCount:
          type: integer
        playDate:
          type: string
          format: date-time
        rating:
          type: integer
        starred:
          type: boolean
        starredAt:
          type: string
          format: date-time
        id:
          type: string
        libraryId:
          type: integer
        path:
          type: string
        title:
          type: string
        album:
          type: string
        artistId:
          type: string
        artist:
          type: string
        albumArtistId:
          type: string
        albumArtist:
          type: string
        albumId:
          type: string
        hasCoverArt:
          type: boolean
        trackNumber:
          type: integer
        discNumber:
          type: integer
        discSubtitle:
          type: string
        year:
          type: integer
        date:
          type: string
        originalYear:
          type: integer
        originalDate:
          type: string
        releaseYear:
          type: integer
        releaseDate:
          type: string
        size:
          type: integer
        suffix:
          type: string
        duration:
          type: number
          format: float32
        bitRate:
          type: integer
        sampleRate:
          type: integer
        channels:
          type: integer
        genre:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        sortTitle:
          type: string
        sortAlbumName:
          type: string
        sortArtistName:
          type: string
        sortAlbumArtistName:
          type: string
        orderTitle:
          type: string
        orderAlbumName:
          type: string
        orderArtistName:
          type: string
        orderAlbumArtistName:
          type: string
        compilation:
          type: boolean
        lyrics:
          type: string
        bpm:
          type: integer
        catalogNum:
          type: string
        mbzRecordingID:
          type: string
        mbzReleaseTrackId:
          type: string
        mbzAlbumId:
          type: string
        mbzArtistId:
          type: string
        mbzAlbumArtistId:
          type: string
        mbzAlbumType:
          type: string
        mbzAlbumComment:
          type: string
        rgAlbumGain:
          type: number
          format: float64
        rgAlbumPeak:
          type: number
          format: float64
        rgTrackGain:
          type: number
          format: float64
        rgTrackPeak:
          type: number
          format: float64
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Genre:
      type: object
      required:
        - name
      properties:
        id:
          type: string
        name:
          type: string
